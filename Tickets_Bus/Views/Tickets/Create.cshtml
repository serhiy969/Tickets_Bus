@model Tickets_Bus.Models.Ticket

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Ticket</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ID_Route, "ID_Route", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ID_Route", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ID_Route, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Departure, "Departure", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Departure", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Departure, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Arrival, "Arrival", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Arrival", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Arrival, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Numb_Seat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Numb_Seat, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.ListBox("Numb_Seat", (MultiSelectList)ViewBag.Free)*@
                @*@Html.DropDownListFor(model => model.Numb_Seat, (MultiSelectList)ViewBag.Free, new { multiple = "multiple" })*@
                @*@Html.ListBoxFor(model => model.Numb_Seat,
    new MultiSelectList((List<SelectListItem>)ViewBag.Free, "Value", "Text"),
    new { style = "display:block;" })*@
                @if (ViewBag.Free != null)
                {
                    @Html.DropDownListFor(model => model.Numb_Seat, (IEnumerable<SelectListItem>
                        ) ViewBag.Free, htmlAttributes: new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.Numb_Seat, "", new {@class = "text-danger"})
                }
                else
                {
                    @Html.EditorFor(model => model.Numb_Seat, new { htmlAttributes = new { @class = "form-control" } })
                }
</div>
        </div>
        @if (ViewBag.Distance != null) { 
        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.LabelFor(model=>model.Price,(string)ViewBag.Distance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                @Html.Hidden("Price",(string)ViewBag.Distance)
            </div>
        </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.Name_Surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name_Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name_Surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date_Sale, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date_Sale, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date_Sale, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
